//common module 
fun initKoin(config : KoinAppDeclaration? = null){
    startKoin {
        includes(config)
        modules(appModule)
    }
}
val appModule = module {
    singleOf(::AuthDataSourceImpl) { bind<AuthDataSource>() }
    singleOf(::AuthRepositoryImpl) { bind<AuthRepository>() }
    viewModelOf(::LoginViewModel)
    viewModelOf(::MonitoringViewModel)
    viewModelOf(::UnitsTableDialogViewModel)
    single<HttpClient> { createHttpClient() }
}

internal fun createHttpClient(): HttpClient = HttpClient {
    install(HttpTimeout) {
        requestTimeoutMillis = 15_000
    }

    install(ContentNegotiation) {
        json(Json {
            ignoreUnknownKeys = true
            isLenient = true
        })
    }

    install(Logging) {
        level = LogLevel.ALL
        logger = object : Logger {
            override fun log(message: String) {
                Logger.DEFAULT.log(message)
            }
        }
    }
}

//android 
class App : Application() {
    override fun onCreate() {
        super.onCreate()
        initKoin {
            androidContext(this@AppJustGps)
            androidLogger()
        }
    }
}
//ios 
fun MainViewController(): UIViewController = ComposeUIViewController(configure = { initKoin() }) { App() }
